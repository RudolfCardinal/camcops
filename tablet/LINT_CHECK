#!/bin/bash

#==============================================================================
# Absolute path to this script, e.g. /Users/rudolf/mobileweb_camcops/SHIP_DOCS.sh
#==============================================================================

LOCALBASEDIR=$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )

#==============================================================================
# lint
#==============================================================================

# sudo npm install jshint -g
# sudo npm install jslint -g

# http://stackoverflow.com/questions/4678418/how-do-i-capture-the-output-from-the-ls-or-find-command-to-store-all-file-names
# http://stackoverflow.com/questions/8063228/how-do-i-check-if-a-variable-exists-in-a-list-in-bash
# http://stackoverflow.com/questions/1063347/passing-arrays-as-parameters-in-bash

VERBOSE=false

echoerr() {
    echo "$@" 1>&2;
}

string_contains() {
    #echo "string_contains arg1: $1"
    #echo "string_contains arg2: $2"
    if [[ $1 =~ $2 ]]; then
        #echo "... found"
        return 0
    else
        #echo "... not found"
        return 1
    fi
}

array_contains() {
    declare -a arr=("${!1}")
    arr_as_string="${arr[@]}"
    x="$2"
    #echo "array_contains arg1: $arr_as_string"
    #echo "array_contains arg2: $x"
    string_contains "$arr_as_string" "$x"
}

cd $LOCALBASEDIR/Resources

allfiles=( $(find . -name "*.js" -o -name "*.jsx" -type f) )
skipfiles=(
    "./lib/bcrypt.js"
    "./lib/moment.js"
    "./lib/moment.min.jsx"
    "./lib/raphael-min.jsx"
    "./lib/sjcl.js"
    "./unittest/jsunity.js"
)

totallines=0

for file in "${allfiles[@]}"; do
    if array_contains skipfiles[@] $file; then
        if $VERBOSE; then
            echoerr "SKIPPING $file"
        fi
    else
        if $VERBOSE; then
            numlines=`wc $file | awk '{print $1}'`
            totallines=$((totallines + numlines))
            echoerr "PROCESSING $file. Number of lines: $numlines."
        fi
        jslint --terse "$file"
    fi
done
if $VERBOSE; then
    echo "Total number of lines: $totallines"
fi
