#!/bin/bash

VERBOSE=false

#==============================================================================
# Directories
#==============================================================================

CAMCOPSROOT=$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )

#==============================================================================
# Support functions
#==============================================================================

echoerr() {
    echo "$@" 1>&2;
}

# http://stackoverflow.com/questions/4678418/how-do-i-capture-the-output-from-the-ls-or-find-command-to-store-all-file-names
# http://stackoverflow.com/questions/8063228/how-do-i-check-if-a-variable-exists-in-a-list-in-bash
# http://stackoverflow.com/questions/1063347/passing-arrays-as-parameters-in-bash

string_contains() {
    #echo "string_contains arg1: $1"
    #echo "string_contains arg2: $2"
    if [[ $1 =~ $2 ]]; then
        #echo "... found"
        return 0
    else
        #echo "... not found"
        return 1
    fi
}

array_contains() {
    declare -a arr=("${!1}")
    arr_as_string="${arr[@]}"
    x="$2"
    #echo "array_contains arg1: $arr_as_string"
    #echo "array_contains arg2: $x"
    string_contains "$arr_as_string" "$x"
}

#==============================================================================
# Python
#==============================================================================

PYLINT_OPTIONS=--output-format=parseable
PYCHECKER_OPTIONS=
PYFLAKES_OPTIONS=

PYTHONFILES=$(find "$CAMCOPSROOT/server" -name "*.py" -not -path "$CAMCOPSROOT/server/debian/*")
# http://stackoverflow.com/questions/4210042/exclude-directory-from-find-command
export PYTHONPATH=$CAMCOPSROOT/server
totallines=0
for f in $PYTHONFILES; do
    pyflakes $PYFLAKES_OPTIONS $f
    pep8 $f
    numlines=`wc $f | awk '{print $1}'`
    totallines=$((totallines + numlines))
    if $VERBOSE; then
        echoerr "File: $f. Number of lines: $numlines."
    else
        echo -n "."
    fi
    # ITSELF BUGGY # pychecker $PYCHECKER_OPTIONS $f
    # pylint $PYLINT_OPTIONS $f
done
echo "Total number of Python lines: $totallines"

#==============================================================================
# Javascript
#==============================================================================

# sudo npm install jshint -g
# sudo npm install jslint -g

RESOURCEDIR=$CAMCOPSROOT/tablet/Resources
cd "$RESOURCEDIR"
ALLFILES=( $(find . -name "*.js" -o -name "*.jsx" -type f) )
SKIPFILES=(
    "./lib/bcrypt.js"
    "./lib/moment.js"
    "./lib/moment.min.jsx"
    "./lib/raphael-min.jsx"
    "./lib/sjcl.js"
    "./unittest/jsunity.js"
)

totallines=0
for file in "${ALLFILES[@]}"; do
    if array_contains SKIPFILES[@] $file; then
        if $VERBOSE; then
            echoerr "SKIPPING $file"
        fi
    else
        numlines=`wc $file | awk '{print $1}'`
        totallines=$((totallines + numlines))
        if $VERBOSE; then
            echoerr "PROCESSING $file. Number of lines: $numlines."
        else
            echo -n "."
        fi
        jslint --terse --edition=latest "$file"
    fi
done
echo "Total number of Javascript lines: $totallines"
