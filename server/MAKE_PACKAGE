#!/bin/bash
set -e

PACKAGE=camcops
STARTDIR=$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )
SRCTABLETDIR=$STARTDIR/../tablet  # cross-reference
WEBDOCSDIR=$STARTDIR/../website/documentation  # cross-reference

DSTSYSTEMPYTHON=python2.7
# ... must be present on the path on the destination system
VIRTUALENV_VERSION=1.11.6

#==============================================================================
echo "Checking prerequisites"
#==============================================================================

# http://www.cyberciti.biz/faq/unix-linux-shell-find-out-posixcommand-exists-or-not/
# http://www.linuxforums.org/forum/programming-scripting/70522-how-check-command-exist.html
# command -v will return >0 when the $i is not found
command_exists()
{
    if command -v $1 >/dev/null; then
        return 0;
    else
        return 1;
    fi # returns 0 (true) for found, 1 (false) for not found
}

FG_RED='\033[0;31m'
BG_GREY='\033[2;47m'
NO_COLOUR='\033[0m'

error()
{
    # http://stackoverflow.com/questions/18215973/how-to-check-if-running-as-root-in-a-bash-script
    if [[ -t 2 ]] ; then echo -e "${FG_RED}${BG_GREY}$@${NO_COLOUR}" ; else echo "$@" ; fi >&2 ;
}

if [[ $EUID -eq 0 ]]; then
    error "This script should not be run using sudo or as the root user"
    exit 1
fi

REQUIRED_COMMANDS="alien dpkg-deb git rpmrebuild"
for i in $REQUIRED_COMMANDS # http://www.cyberciti.biz/faq/unix-linux-shell-find-out-posixcommand-exists-or-not/
do
	command_exists $i \
        && continue \
        || { error "$i command not found; stopping"; exit 1; }
done

# Alien:
#   sudo apt-get install alien
# rpmrebuild:
#   1. Download RPM from http://rpmrebuild.sourceforge.net/, e.g. wget http://downloads.sourceforge.net/project/rpmrebuild/rpmrebuild/2.11/rpmrebuild-2.11-1.noarch.rpm
#   2. Convert to DEB: sudo alien --to-deb rpmrebuild-2.11-1.noarch.rpm
#   3. Install: sudo dpkg --install rpmrebuild_2.11-2_all.deb

#==============================================================================
# RPM issues
#==============================================================================
# 1. A dummy camcops-prerequisites package works but is inelegant.
# 2. Alien seems to strip dependencies.
# 3. rpmrebuild does the job albeit not wholly intuitive documentation!
#    It also allows you to see what Alien was doing.

#==============================================================================
sudo echo "Setting constants"
#==============================================================================
# ... sudo it so we ask for the password early and the user's attention doesn't
# wander before we get to the bits requiring sudo...

#==============================================================================
# Directories and files
#==============================================================================

cd /
# ... just in case we're called from a nonexisting (removed) directory

# RPM_PREREQUISITE_PACKAGE=${PACKAGE}-prerequisites

# Base directory to assemble the package in. CAUTION! Automatically removed.
WRKDIR=$STARTDIR/debian

PACKAGEDIR=$STARTDIR/packagebuild
DSTCAMCOPSDIR=/usr/share/$PACKAGE
# ... Lintian dislikes files/subdirectories in: /usr/bin/X, /usr/local/X, /opt/X
# ... It dislikes images in /usr/lib

# WEB_VERSION_FILES_DIR=/srv/www/camcops/documentation/version
WEB_VERSION_FILES_DIR=$WEBDOCSDIR/version

DSTDOCDIR=/usr/share/doc/$PACKAGE
WRKDOCDIR=$WRKDIR$DSTDOCDIR

SRCBASEDIR=$STARTDIR
WRKBASEDIR=$WRKDIR$DSTCAMCOPSDIR

DEBDIR=$WRKDIR/DEBIAN # where Debian package control information lives
DEBOVERRIDEDIR=$WRKDIR/usr/share/lintian/overrides

DSTCONSOLEFILEDIR=/usr/bin
SETUPSCRIPTNAME=$PACKAGE
DBHELPERSCRIPT=${PACKAGE}_db
WRKCONSOLEFILEDIR=$WRKDIR$DSTCONSOLEFILEDIR
DSTCONSOLEFILE=$DSTCONSOLEFILEDIR/$SETUPSCRIPTNAME
WRKCONSOLEFILE=$WRKCONSOLEFILEDIR/$SETUPSCRIPTNAME
DSTDBHELPERFILE=$DSTCONSOLEFILEDIR/$DBHELPERSCRIPT
WRKDBHELPERFILE=$WRKCONSOLEFILEDIR/$DBHELPERSCRIPT

SRCEXTRASTRINGTEMPLATES=$SRCBASEDIR/extra_string_templates
WRKEXTRASTRINGTEMPLATES=$WRKBASEDIR/extra_string_templates
#DSTEXTRASTRINGTEMPLATES=$DSTCAMCOPSDIR/extra_string_templates

#SRCDOCDIR=$SRCBASEDIR/documentation

SRCSERVERDIR=$SRCBASEDIR
WRKSERVERDIR=$WRKBASEDIR/server
DSTSERVERDIR=$DSTCAMCOPSDIR/server

SRCPYTHONLIBDIR=$SRCBASEDIR/pythonlib
WRKPYTHONLIBDIR=$WRKSERVERDIR/pythonlib
#DSTPYTHONLIBDIR=$DSTCAMCOPSDIR/pythonlib

DSTSTRINGFILE=$DSTSERVERDIR/strings.xml

SRCMODULEDIR=$SRCSERVERDIR/cc_modules
WRKMODULEDIR=$WRKSERVERDIR/cc_modules
#DSTMODULEDIR=$DSTSERVERDIR/cc_modules

SRCTASKDIR=$SRCSERVERDIR/tasks
WRKTASKDIR=$WRKSERVERDIR/tasks
#DSTTASKDIR=$DSTSERVERDIR/tasks

DSTTEMPDIR=$DSTCAMCOPSDIR/tmp

SRCTASKDISCARDEDDIR=$SRCSERVERDIR/tasks_discarded
WRKTASKDISCARDEDDIR=$WRKSERVERDIR/tasks_discarded
DSTTASKDISCARDEDDIR=$DSTSERVERDIR/tasks_discarded

WRKTABLETDIR=$WRKBASEDIR/tablet
#TMPTABLETDIR=$WRKDIR/verytemp

DSTPYTHONENV=$DSTCAMCOPSDIR/virtualenv
PIP=$DSTPYTHONENV/bin/pip
PYTHON=$DSTPYTHONENV/bin/python

MAINSCRIPTNAME=camcops.py
DBSCRIPTNAME=database.py

#DSTPYTHONPATH=$DSTPYTHONLIBDIR:$DSTSERVERDIR:$DSTMODULEDIR:$DSTTASKDIR
DSTPYTHONPATH=$DSTSERVERDIR
# ... others are referenced via the package system from this base directory
WRKMAINSCRIPT=$WRKSERVERDIR/$MAINSCRIPTNAME
DSTMAINSCRIPT=$DSTSERVERDIR/$MAINSCRIPTNAME
DSTDBSCRIPT=$DSTSERVERDIR/$DBSCRIPTNAME

DSTMANDIR=/usr/share/man/man1 # section 1 for user commands
WRKMANDIR=$WRKDIR$DSTMANDIR
WRKMANFILE=$WRKMANDIR/${SETUPSCRIPTNAME}.1 # will also be gzipped
WRKMANDBFILE=$WRKMANDIR/${DBHELPERSCRIPT}.1

WRKAPACHECONFIG=$WRKBASEDIR/demo_apache_config_section
WRKDBDUMPFILE=$WRKBASEDIR/demo_mysql_dump_script
WRKMYSQLCREATION=$WRKBASEDIR/demo_mysql_database_creation

DSTCONFIGDIR=/etc/$PACKAGE
DSTCONFIGFILE=$DSTCONFIGDIR/$PACKAGE.conf
WRKCONFIGDIR=$WRKDIR$DSTCONFIGDIR
WRKCONFIGFILE=$WRKDIR$DSTCONFIGFILE
WEBDOCSCONFIGFILE=$WEBDOCSDIR/$PACKAGE.conf

RPMTOPDIR=$STARTDIR/rpmbuild

DSTDPKGDIR=/var/lib/dpkg/info

APACHEUSER=www-data
# ... not predictable on CentOS

DSTLOCKDIR=/var/lock/$PACKAGE
DSTHL7LOCKFILESTEM=$DSTLOCKDIR/$PACKAGE.hl7
DSTSUMMARYTABLELOCKFILESTEM=$DSTLOCKDIR/$PACKAGE.summarytables
# http://www.debian.org/doc/debian-policy/ch-opersys.html#s-writing-init

#==============================================================================
# Other constants
#==============================================================================

VIRTUALENV_BASE_URL=http://pypi.python.org/packages/source/v/virtualenv

#==============================================================================
# Version number and conditionals
#==============================================================================

VERSIONFILE=$SRCSERVERDIR/cc_modules/cc_version.py
MAINVERSION=`perl -ne 'print $1 if /^CAMCOPS_SERVER_VERSION\s*=\s*([\d\.]*)/;' $VERSIONFILE`
CHANGEDATE=`perl -ne 'print $1 if /^CAMCOPS_CHANGEDATE\s*=\s*\"(\S*)\"/;' $VERSIONFILE`
PDF_ENGINE=`perl -ne 'print lc $1 if /^PDF_ENGINE\s*=\s*\"(\S*)\"/;' $VERSIONFILE`
DEBVERSION=${MAINVERSION}-1
INITIALPACKAGENAME=$STARTDIR/debian.deb
FINALPACKAGENAME=$PACKAGEDIR/${PACKAGE}_${DEBVERSION}_all.deb
# upstream_version-debian_revision --
# see http://www.debian.org/doc/debian-policy/ch-controlfields.html#s-f-Version

echo "mainversion: $MAINVERSION"
echo "changedate: $CHANGEDATE"
echo "PDF engine: $PDF_ENGINE"
echo "debugging installation (using system Python rather than virtualenv): $DEBUG_USE_SYSTEM_PYTHON"

#==============================================================================
# Dependencies
#==============================================================================

# ... in ALPHABETICAL ORDER for Debian:
DEPENDS_DEB_ARRAY=(
    apache2
    gcc
    libapache2-mod-wsgi
    libmagickwand-dev
    libmysqlclient-dev
    libssl-dev
    libxml2-dev
    libxslt1-dev
    mysql-client
    mysql-server
    python
    python2.7
    python-dev
    swig
    wget
)
# ... and in the CORRESPONDING ORDER for RPM:
DEPENDS_RPM_ARRAY=(
    httpd
    gcc # gcc is not standard on CentOS, but is necessary for installation of other packages
    # mod_wsgi: so tricky (with Python 2.7 on CentOS 6.5) that it should be done by hand
    ImageMagick-devel
    # libmysqlclient-dev equivalent: mysql[55]-devel? mysql[55]-lib?
    openssl-devel
    libxml2-devel
    libxslt-devel
    mysql55
    mysql55-server
    python
    # Python 2.7; must install manually
    python-devel
    swig
    wget
)
# For yum, some different names. Search e.g. with "yum list scip\*" or "yum search scipy" to find scipy
# pyodbc requires {sql.h sqlext.h} which requires unixodbc-dev (Debian) or unixODBC-devel (CentOS)

# weasyprint: lxml needs (libxml2-dev libxslt1-dev); weasyprint also needs (python-dev python-pip python-lxml libcairo2 libpango1.0-0 libgdk-pixbuf2.0-0 libffi-dev)
if [ "$PDF_ENGINE" == "weasyprint" ]; then
    DEPENDS_DEB_ARRAY+=(
        libcairo2
        libffi-dev
        libgdk-pixbuf2.0-0
        libpango1.0-0
    )
    DEPENDS_RPM_ARRAY+=(
        cairo-devel
        libffi-devel
        glib-devel
        pango
    )
elif [ "$PDF_ENGINE" == "xhtml2pdf" ]; then
    # nothing to do
    :
elif [ "$PDF_ENGINE" == "pdfkit" ]; then
    # nothing to do; don't use the Ubuntu-supplied version; see later
    :
else
    echo "Unknown PDF engine: $PDF_ENGINE"
    exit 1
fi

SAVE_IFS=$IFS
IFS=", "
DEPENDS_DEB="${DEPENDS_DEB_ARRAY[*]}"
IFS=" "
DEPENDS_RPM="${DEPENDS_RPM_ARRAY[*]}"
REQUIRED_PYTHONLIBS="${REQUIRED_PYTHONLIBS_ARRAY[*]}"
IFS=$SAVE_IFS

#==============================================================================
# URL default
#==============================================================================
INSTITUTIONURL=http://www.mydomain/
CAMCOPSHOSTNAME=mycomputer.mydomain
URLBASE=camcops
WEBVIEWSCRIPT=webview
TABLETSCRIPT=database
DEFAULT_DB_NAME=camcops
DEFAULT_DB_USER=YYYYYY_REPLACE_ME
DEFAULT_DB_PASSWORD=ZZZZZZ_REPLACE_ME
DEFAULT_DB_READONLY_USER=QQQQQQ_REPLACE_ME
DEFAULT_DB_READONLY_PASSWORD=PPPPPP_REPLACE_ME
DEFAULT_ANONSTAG_DB_NAME=anon_staging_camcops
DEFAULT_ANONSTAG_DB_USER=UUUUUU_REPLACE_ME
DEFAULT_ANONSTAG_DB_PASSWORD=WWWWWW_REPLACE_ME

#==============================================================================
echo "Deleting old workspace"
#==============================================================================
rm -rf $WRKDIR  # CAUTION!

#==============================================================================
echo "Making directories"
#==============================================================================
mkdir -p $WRKDIR
mkdir -p $PACKAGEDIR
mkdir -p $DEBDIR
mkdir -p $DEBOVERRIDEDIR
mkdir -p $WRKPYTHONLIBDIR
mkdir -p $WRKEXTRASTRINGTEMPLATES
mkdir -p $WRKDOCDIR
mkdir -p $WRKMANDIR
mkdir -p $WRKCONSOLEFILEDIR
mkdir -p $WRKSERVERDIR
mkdir -p $WRKMODULEDIR
mkdir -p $WRKTASKDIR
mkdir -p $WRKTASKDISCARDEDDIR
mkdir -p $WRKCONFIGDIR
mkdir -p $RPMTOPDIR
mkdir -p $RPMTOPDIR/{BUILD,BUILDROOT,RPMS,RPMS/noarch,SOURCES,SPECS,SRPMS}

#==============================================================================
echo "Copying files"
#==============================================================================
cp $SRCPYTHONLIBDIR/*.py $WRKPYTHONLIBDIR
#cp -R $SRCDOCDIR/* $WRKDOCDIR
cp $SRCSERVERDIR/$MAINSCRIPTNAME $WRKSERVERDIR
cp $SRCSERVERDIR/$DBSCRIPTNAME $WRKSERVERDIR
cp $SRCSERVERDIR/images/favicon_camcops.png $WRKSERVERDIR
cp $SRCSERVERDIR/images/logo_camcops.png $WRKSERVERDIR
# cp $SRCSERVERDIR/images/logo_camcops.svg $WRKSERVERDIR
cp $SRCSERVERDIR/images/logo_local.png $WRKSERVERDIR
# cp $SRCSERVERDIR/images/logo_local.svg $WRKSERVERDIR
cp $SRCTABLETDIR/i18n/en/strings.xml $WRKSERVERDIR
cp $SRCSERVERDIR/changelog.Debian $WRKDOCDIR
gzip -9 $WRKDOCDIR/changelog.Debian
cp $SRCSERVERDIR/changelog.Debian $WEB_VERSION_FILES_DIR # for the web site
cp $SRCMODULEDIR/*.py $WRKMODULEDIR
cp $SRCTASKDIR/*.py $WRKTASKDIR
cp $SRCTASKDISCARDEDDIR/*.py $WRKTASKDISCARDEDDIR
cp $SRCEXTRASTRINGTEMPLATES/* $WRKEXTRASTRINGTEMPLATES

#==============================================================================
echo "Copying tablet code"
#==============================================================================

TABLETSUBDIRS="common html lib menu menulib questionnaire questionnairelib \
              screen table task task_html"

#mkdir -p $TMPTABLETDIR
## svn checkout https://egret.psychol.cam.ac.uk/svn/camcops_titanium/ $TMPTABLETDIR
## TABLETRESOURCESDIR=$TMPTABLETDIR/trunk/CamCOPS/Resources
#git clone https://rudolf@egret.psychol.cam.ac.uk/git/camcops-tablet $TMPTABLETDIR
#TABLETRESOURCESDIR=$TMPTABLETDIR/Resources

TABLETRESOURCESDIR=$SRCTABLETDIR/Resources

mkdir -p $WRKTABLETDIR
for d in $TABLETSUBDIRS
do
    mkdir -p $WRKTABLETDIR/$d
    cp $TABLETRESOURCESDIR/$d/* $WRKTABLETDIR/$d/
done

#rm -rf $TMPTABLETDIR  # CAUTION!


#==============================================================================
echo "Creating man page. Will be installed as /usr/share/man/man1/$SETUPSCRIPTNAME.1.gz"
#==============================================================================
# http://www.fnal.gov/docs/products/ups/ReferenceManual/html/manpages.html

cat << EOF > $WRKMANFILE
.\" Manpage for $SETUPSCRIPTNAME.
.\" Contact rudolf@pobox.com to correct errors or typos.
.TH man 1 "$CHANGEDATE" "$MAINVERSION" "$SETUPSCRIPTNAME man page"

.SH NAME
$SETUPSCRIPTNAME \- run the CamCOPS command-line tool

.SH SYNOPSIS
.B $SETUPSCRIPTNAME [
.I options
.B ] [
.I config-file
.B ]

.SH DESCRIPTION
The CamCOPS command-line tool allows you to create main tables (also specifying
the meaning of ID numbers), temporary summary tables, and superusers. It can
send HL7 messages and export files. It can perform some other test functions
and perform some user administration tasks. All other administration is via the
web interface.

A prerequisite is a MySQL database. For details, see http://www.camcops.org/

By default, the configuration file is $DSTCONFIGFILE,
and is readable only by the Apache user (typically $APACHEUSER on Debian/Ubuntu).
You may need to use "sudo -u $APACHEUSER $SETUPSCRIPTNAME" or
"sudo $SETUPSCRIPTNAME", so that the script can read this file.

You will also need to point your web server (e.g. Apache) at the CamCOPS scripts;
see http://www.camcops.org/

.SH FOR DETAILS
.IP "camcops --help"
show all options

.SH EXAMPLES

.IP "sudo camcops --maketables /etc/camcops/camcops.conf"
Rebuild the tables for a database pointed to by
.B /etc/camcops/camcops.conf
, the specimen configuration file.

.SH BUGS
No known bugs.

.SH SEE ALSO
http://www.camcops.org/

.SH AUTHOR
Rudolf Cardinal (rudolf@pobox.com)
EOF

gzip -9 $WRKMANFILE

#==============================================================================
echo "Creating man page. Will be installed as /usr/share/man/man1/$DBHELPERSCRIPT.1.gz"
#==============================================================================

cat << EOF > $WRKMANDBFILE
.\" Manpage for $DBHELPERSCRIPT.
.\" Contact rudolf@pobox.com to correct errors or typos.
.TH man 1 "$CHANGEDATE" "$MAINVERSION" "$DBHELPERSCRIPT man page"

.SH NAME
$DBHELPERSCRIPT \- run the CamCOPS database script via the command line.

.SH DESCRIPTION
This is only for unit testing purposes. The underlying script should be called
directly from Apache via mod_wsgi; see the specimen configuration files in the
documentation.
.SH SEE ALSO
man camcops
http://www.camcops.org/

.SH AUTHOR
Rudolf Cardinal (rudolf@pobox.com)
EOF

gzip -9 $WRKMANDBFILE

#==============================================================================
echo "Creating links to documentation. Will be installed as $DSTDOCDIR/README.txt"
#==============================================================================
cat << EOF > $WRKDOCDIR/README.txt

CamCOPS: the Cambridge Cognitive and Psychiatric Test Kit

See http://www.camcops.org for documentation.

EOF

#==============================================================================
echo "Creating config file. Will be installed as $DSTCONFIGFILE"
#==============================================================================
cat << EOF > $WRKCONFIGFILE

# =============================================================================
# Format of the CamCOPS configuration file
# =============================================================================
# COMMENTS. Hashes (#) and semicolons (;) mark out comments.
# SECTIONS. Sections are indicated with: [section]
# NAME/VALUE (KEY/VALUE) PAIRS.
# - The parser used is ConfigParser (Python).
# - It allows "name=value" or "name:value".
# - BOOLEAN OPTIONS. For Boolean options, TRUE values are any of: 1, yes, true,
#   on (case-insensitive). FALSE values are any of: 0, no, false, off.
# - UTF-8 encoding. Use this. For ConfigParser, the file is explicitly opened
#   in UTF-8 mode.
# - Avoid indentation.

# =============================================================================
# Main section: [server]
# =============================================================================

[server]

# -----------------------------------------------------------------------------
# Database connection/tools
# -----------------------------------------------------------------------------

# DB_NAME: MySQL database name.
# If you didn't call the database '$DEFAULT_DB_NAME', edit the next line:

DB_NAME = $DEFAULT_DB_NAME

# DB_USER: MySQL database username.
# DB_PASSWORD: MySQL database password.
# Edit the next two lines:

DB_USER = $DEFAULT_DB_USER
DB_PASSWORD = $DEFAULT_DB_PASSWORD

# DB_SERVER: MySQL database server (default: localhost).
# DB_PORT: MySQL database port (default: 3306).
# These values are unlikely to need modification:

DB_SERVER = localhost
DB_PORT = 3306

# MYSQL: Specify the full path to the mysql executable, by default
# /usr/bin/mysql (used for data dumps for privileged users).

MYSQL = /usr/bin/mysql

# MYSQLDUMP: Specify the full path to the mysqldump executable, by default
# /usr/bin/mysqldump (used for data dumps for privileged users).

MYSQLDUMP = /usr/bin/mysqldump

# -----------------------------------------------------------------------------
# Database title and ID descriptions
# -----------------------------------------------------------------------------
# NOTE: WHENEVER YOU CHANGE THESE, YOU MUST USE THE CAMCOPS COMMAND-LINE TOOL
# TO REWRITE THEM INTO THE DATABASE.

# DATABASE_TITLE: the friendly title of your database (as Unicode UTF-8).

DATABASE_TITLE = My First CamCOPS Database

# IDDESC_1 to IDDESC_8: full descriptions of each of the possible ID numbers.
# IDSHORTDESC_1 to IDSHORTDESC_8: short versions of the same descriptions.
# All are Unicode UTF-8.

IDDESC_1 = NHS number
IDSHORTDESC_1 = NHS
IDDESC_2 = CPFT RiO number
IDSHORTDESC_2 = RiO
IDDESC_3 = CPFT M number
IDSHORTDESC_3 = M
IDDESC_4 = Addenbrooke’s number
IDSHORTDESC_4 = Add
IDDESC_5 = Papworth number
IDSHORTDESC_5 = Pap
IDDESC_6 = Hinchingbrooke number
IDSHORTDESC_6 = Hinch
IDDESC_7 = Peterborough City Hosp number
IDSHORTDESC_7 = PCH
IDDESC_8 = Spare_8_idnum
IDSHORTDESC_8 = Spare8

# -----------------------------------------------------------------------------
# ID policies
# -----------------------------------------------------------------------------
# NOTE: WHENEVER YOU CHANGE THESE, YOU MUST USE THE CAMCOPS COMMAND-LINE TOOL
# TO REWRITE THEM INTO THE DATABASE.

# UPLOAD_POLICY and FINALIZE_POLICY define two ID policies. The upload policy
# is the looser policy, allowing upload from tablets to the server. The
# finalize policy is typically the same or stricter, and allows records to
# be deleted from the tablets. See documentation.
#
# Case-insensitive. Valid tokens are:
#   (
#   )
#   AND
#   OR
#   forename
#   surname
#   dob
#   sex
#   idnum1 ... idnum8
#
# Liaison psychiatry upload example, allowing upload with any of multiple
# institutional IDs, but finalizing only with the institution's core ID:
#
# UPLOAD_POLICY = forename AND surname AND dob AND sex AND (idnum1 OR idnum2 OR idnum3 OR idnum4 OR idnum5 OR idnum6 OR idnum7 OR idnum8)
# FINALIZE_POLICY = forename AND surname AND dob AND sex AND idnum1
#
# Research pseudonym example, in which a single number is used and no
# patient-identifying information:
#
# UPLOAD_POLICY = sex AND idnum1
# FINALIZE_POLICY = sex AND idnum1

UPLOAD_POLICY = forename AND surname AND dob AND sex AND (idnum1 OR idnum2 OR idnum3 OR idnum4 OR idnum5 OR idnum6 OR idnum7 OR idnum8)
FINALIZE_POLICY = forename AND surname AND dob AND sex AND idnum1

# -----------------------------------------------------------------------------
# URLs and paths
# -----------------------------------------------------------------------------

# LOCAL_INSTITUTION_URL: Clicking on your institution's logo in the CamCOPS
# menu will take you to this URL.
# Edit the next line to point to your institution:

LOCAL_INSTITUTION_URL = $INSTITUTIONURL

# LOCAL_LOGO_FILE_ABSOLUTE: Specify the full path to your institution's logo
# file, e.g. /var/www/logo_local_myinstitution.png . It's used for PDF
# generation; HTML views use the fixed string logo_local.png, aliased to your
# file via the Apache configuration file).
# Edit the next line to point to your local institution's logo file:

LOCAL_LOGO_FILE_ABSOLUTE = $DSTSERVERDIR/logo_local.png

# RESOURCES_DIRECTORY: Resources directory containing the strings.xml string
# file and other resources (set by the installation script;
# default $DSTSERVERDIR).

RESOURCES_DIRECTORY = $DSTSERVERDIR

# EXTRA_STRING_FILES: multiline list of filenames (with absolute paths), read
# by the server, and used as EXTRA STRING FILES (in addition to the main
# strings.xml file specified by RESOURCES_DIRECTORY above). Optional.

EXTRA_STRING_FILES =

# INTROSPECTION_DIRECTORY: Root directory of the CamCOPS installation,
# used for offering CamCOPS's source code to users if INTROSPECTION is enabled.
# Default is $DSTCAMCOPSDIR.
# INTROSPECTION: permits the offering of CamCOPS source code files to the user,
# allowing inspection of tasks' internal calculating algorithms. Default is
# true.

INTROSPECTION_DIRECTORY = $DSTCAMCOPSDIR
INTROSPECTION = true

# HL7_LOCKFILE: filename stem used for process locking for HL7 message
# transmission. Default is $DSTHL7LOCKFILESTEM
# The actual lockfile will, in this case, be called
#     ${DSTHL7LOCKFILESTEM}.lock
# and other process-specific files will be created in the same directory (so
# the CamCOPS script must have permission from the operating system to do so).
# The installation script will create the directory $DSTLOCKDIR

HL7_LOCKFILE = $DSTHL7LOCKFILESTEM

# SUMMARY_TABLES_LOCKFILE: file stem used for process locking for summary table
# generation. Default is $DSTSUMMARYTABLELOCKFILESTEM.
# The lockfile will, in this case, be called
#     ${DSTSUMMARYTABLELOCKFILESTEM}.lock
# and other process-specific files will be created in the same directory (so
# the CamCOPS script must have permission from the operating system to do so).
# The installation script will create the directory $DSTLOCKDIR

SUMMARY_TABLES_LOCKFILE = $DSTSUMMARYTABLELOCKFILESTEM

# WKHTMLTOPDF_FILENAME: for the pdfkit PDF engine, specify a filename for
# wkhtmltopdf that incorporates any need for an X Server (not the default
# /usr/bin/wkhtmltopdf). See http://stackoverflow.com/questions/9604625/ .
# A suitable one is bundled with CamCOPS, so you shouldn't have to alter this
# default. Default is None, which usually ends up calling /usr/bin/wkhtmltopdf

WKHTMLTOPDF_FILENAME =

# -----------------------------------------------------------------------------
# Login and session configuration
# -----------------------------------------------------------------------------

# SESSION_TIMEOUT_MINUTES: Time after which a session will expire (default 30).

SESSION_TIMEOUT_MINUTES = 30

# PASSWORD_CHANGE_FREQUENCY_DAYS: Force password changes (at webview login)
# with this frequency (0 for never). Note that password expiry will not prevent
# uploads from tablets, but when the user next logs on, a password change will
# be forced before they can do anything else.

PASSWORD_CHANGE_FREQUENCY_DAYS = 0

# LOCKOUT_THRESHOLD: Lock user accounts after every n login failures (default
# 10).

LOCKOUT_THRESHOLD = 10

# LOCKOUT_DURATION_INCREMENT_MINUTES: Account lockout time increment (default
# 10).
# Suppose LOCKOUT_THRESHOLD = 10 and LOCKOUT_DURATION_INCREMENT_MINUTES = 20.
# After the first 10 failures, the account will be locked for 20 minutes.
# After the next 10 failures, the account will be locked for 40 minutes.
# After the next 10 failures, the account will be locked for 60 minutes, and so
# on. Time and administrators can unlock accounts.

LOCKOUT_DURATION_INCREMENT_MINUTES = 10

# DISABLE_PASSWORD_AUTOCOMPLETE: if true, asks browsers not to autocomplete the
# password field on the main login page. The correct setting for maximum
# security is debated (don't cache passwords, versus allow a password manager
# so that users can use better/unique passwords). Default: true.
# Note that some browsers (e.g. Chrome v34 and up) may ignore this.

DISABLE_PASSWORD_AUTOCOMPLETE = true

# -----------------------------------------------------------------------------
# Suggested filenames for saving PDFs from the web view
# -----------------------------------------------------------------------------
# Try with Chrome, Firefox. Internet Explorer may be less obliging.

# PATIENT_SPEC_IF_ANONYMOUS: for anonymous tasks, this string is used as the
# patient descriptor (see also PATIENT_SPEC, SUGGESTED_PDF_FILENAME below).
# Typically "anonymous".

PATIENT_SPEC_IF_ANONYMOUS = anonymous

# PATIENT_SPEC: string, into which substitutions will be made, that defines the
# {patient} element available for substitution into the *_FILENAME_SPEC
# variables (see below). Possible substitutions:
#
#   {surname}      : patient's surname in upper case
#   {forename}     : patient's forename in upper case
#   {dob}          : patient's date of birth (format "%Y-%m-%d", e.g.
#                    2013-07-24)
#   {sex}          : patient's sex (M, F, X)
#
#   {idshortdesc1} : short description of the relevant ID number, if that ID
#   ...              number is not blank; otherwise blank
#   {idshortdesc8}
#
#   {idnum1}       : ID numbers
#   ...
#   {idnum8}
#
#   {allidnums}    : all available ID numbers in "shortdesc-value" pairs joined
#                    by "_". For example, if ID numbers 1, 4, and 5 are
#                    non-blank, this would have the format
#                    idshortdesc1-idval1_idshortdesc4-idval4_idshortdesc5-idval5

PATIENT_SPEC = {surname}_{forename}_{allidnums}

# TASK_FILENAME_SPEC:
# TRACKER_FILENAME_SPEC:
# CTV_FILENAME_SPEC:
# Strings used for suggested filenames to save from the webview, for tasks,
# trackers, and clinical text views. Substitutions will be made to determine
# the filename to be used for each file. Possible substitutions:
#
#   {patient}   : Patient string. If the task is anonymous, this is
#                 PATIENT_SPEC_IF_ANONYMOUS; otherwise, it is defined by
#                 PATIENT_SPEC above.
#   {created}   : Date/time of task creation.  Dates/times are of the format
#                 "%Y-%m-%dT%H%M", e.g. 2013-07-24T2004. They are expressed in
#                 the timezone of creation (but without the timezone
#                 information for filename brevity).
#   {now}       : Time of access/download (i.e. time now), in local timezone.
#   {tasktype}  : Base table name of the task (e.g. "phq9"). May contain an
#                 underscore. Blank for to trackers/CTVs.
#   {serverpk}  : Server's primary key. (In combination with tasktype, this
#                 uniquely identifies not just a task but a version of that
#                 task.) Blank for trackers/CTVs.
#   {filetype}  : e.g. "pdf", "html", "xml" (lower case)
#   {anonymous} : evaluates to PATIENT_SPEC_IF_ANONYMOUS if anonymous,
#                 otherwise ""
#   ... plus all those substitutions applicable to PATIENT_SPEC
#
# After these substitutions have been made, the entire filename is then
# processed to ensure that only characters generally acceptable to filenames
# are used (see convert_string_for_filename() in the CamCOPS source code).
# Specifically:
#
#   - Unicode converted to 7-bit ASCII (will mangle, e.g. removing accents)
#   - spaces converted to underscores
#   - characters are removed unless they are one of the following: all
#     alphanumeric characters (0-9, A-Z, a-z); '-'; '_'; '.'; and the
#     operating-system-specific directory separator (Python's os.sep, a forward
#     slash '/' on UNIX or a backslash '\' under Windows).

TASK_FILENAME_SPEC = CamCOPS_{patient}_{created}_{tasktype}-{serverpk}.{filetype}
TRACKER_FILENAME_SPEC = CamCOPS_{patient}_{now}_tracker.{filetype}
CTV_FILENAME_SPEC = CamCOPS_{patient}_{now}_clinicaltextview.{filetype}

# -----------------------------------------------------------------------------
# Debugging options
# -----------------------------------------------------------------------------
# Possible log levels are (case-insensitive): "debug", "info", "warn"
# (equivalent: "warning"), "error", and "critical" (equivalent: "fatal").

# WEBVIEW_LOGLEVEL: Set the level of detail provided from the webview to the
# Apache server log. (Loglevel option; see above.)

WEBVIEW_LOGLEVEL = info

# DBENGINE_LOGLEVEL: Set the level of detail provided from the underlying
# database transaction handler to the Apache server log. More of a security
# risk than WEBVIEW_DEBUG_OUTPUT. (Loglevel option; see above.)

DBENGINE_LOGLEVEL = info

# DBCLIENT_LOGLEVEL: Set the log level for the tablet client database access
# script. (Loglevel option; see above.)

DBCLIENT_LOGLEVEL = info

# -----------------------------------------------------------------------------
# Analytics
# -----------------------------------------------------------------------------

# SEND_ANALYTICS: Send analytics to the CamCOPS base in Cambridge? (Boolean
# option; default true.) We'd be very grateful if you would leave this on, as
# it helps us to know how many users of CamCOPS there are and what tasks are
# popular. NO PATIENT-IDENTIFIABLE INFORMATION, PER-PATIENT INFORMATION, OR
# TASK DETAILS ARE SENT. If enabled, the following information is sent weekly
# to the CamCOPS base computer:
# - the date/time, including timezone (allowing us to get a rough idea of its
#   geographical distribution)
# - IP address (allowing us to get a rough idea of geographical/institutional
#   distribution)
# - the CamCOPS version number (so we know if old versions are still in use, or
#   if we can break them in an upgrade)
# - the total number of records in each table (allowing us to get an idea of
#   which tasks are popular)

SEND_ANALYTICS = true

# -----------------------------------------------------------------------------
# Export to a staging database for CRIS or similar anonymisation software
# (anonymisation staging database; ANONSTAG)
# -----------------------------------------------------------------------------

ANONSTAG_DB_SERVER = localhost
ANONSTAG_DB_PORT = 3306
ANONSTAG_DB_NAME = $DEFAULT_ANONSTAG_DB_NAME
ANONSTAG_DB_USER = $DEFAULT_ANONSTAG_DB_USER
ANONSTAG_DB_PASSWORD = $DEFAULT_ANONSTAG_DB_PASSWORD
EXPORT_CRIS_DATA_DICTIONARY_TSV_FILE = /tmp/camcops_cris_dd_draft.tsv

# -----------------------------------------------------------------------------
# In development
# -----------------------------------------------------------------------------

# ALLOW_MOBILEWEB: Enable the mobileweb client? (Boolean.)
# FEATURE IN DEVELOPMENT; SWITCH THIS OFF FOR NOW.
# The Mobile Web app is not yet fully operational.
# Also, enabling Mobile Web allows authorized users to retrieve (their own)
# patient information from the server, so disable it unless you need it.

ALLOW_MOBILEWEB = false

# =============================================================================
# List of HL7/file recipients, and then details for each one
# =============================================================================
# This section defines a list of recipients to which Health Level Seven (HL7)
# messages or raw files will be sent. Typically, you will send them by calling
# "camcops -7 CONFIGFILE" regularly from the system's /etc/crontab or other
# scheduling system. For example, a conventional /etc/crontab file has these
# fields:
#
#   minutes, hours, day_of_month, month, day_of_week, user, command
#
# so you could add a line like this to /etc/crontab:
#
#   * * * * *  root  camcops -7 /etc/camcops/MYCONFIG.conf
#
# ... and CamCOPS would run its exports once per minute. See "man 5 crontab"
# or http://en.wikipedia.org/wiki/Cron for more options.
#
# In this section, keys are ignored; values are section headings (one per
# recipient).

[recipients]

# Examples (commented out):

# recipient=recipient_A
# recipient=recipient_B

# =============================================================================
# Individual HL7/file recipient configurations
# =============================================================================
# Dates are YYYY-MM-DD, e.g. 2013-12-31, or blank

# Example (disabled because it's not in the list above)

# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# First example
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

[recipient_A]

# TYPE: one of the following methods.
#   hl7
#       Sends HL7 messages across a TCP/IP network.
#   file
#       Writes files to a local filesystem.

TYPE = hl7

# -----------------------------------------------------------------------------
# Options applicable to HL7 messages and file transfers
# -----------------------------------------------------------------------------

# PRIMARY_IDNUM: which ID number (1-8) should be considered the "internal"
# (primary) ID number? Must be specified for HL7 messages. May be blank for
# file transmission.

PRIMARY_IDNUM = 1

# REQUIRE_PRIMARY_IDNUM_MANDATORY_IN_POLICY: defines behaviour relating to the
# primary ID number (as defined by PRIMARY_IDNUM).
# - If true, no message sending will be attempted unless the PRIMARY_IDNUM is a
#   mandatory part of the finalizing policy (and if FINALIZED_ONLY is false,
#   also of the upload policy).
# - If false, messages will be sent, but ONLY FROM TASKS FOR WHICH THE
#   PRIMARY_IDNUM IS PRESENT; others will be ignored.
# - For file sending only, this will be ignored if PRIMARY_IDNUM is blank.
# - For file sending only, this setting does not apply to anonymous tasks,
#   whose behaviour is controlled by INCLUDE_ANONYMOUS (see below).

REQUIRE_PRIMARY_IDNUM_MANDATORY_IN_POLICY = true

# START_DATE: earliest date for which tasks will be sent. Assessed against the
# task's "when_created" field, converted to Universal Coordinated Time (UTC) --
# that is, this date is in UTC (beware if you are in a very different time
# zone). Blank to apply no start date restriction.

START_DATE =

# END_DATE: latest date for which tasks will be sent. In UTC. Assessed against
# the task's "when_created" field (converted to UTC). Blank to apply no end
# date restriction.

END_DATE =

# FINALIZED_ONLY: if true, only send tasks that are finalized (moved off their
# originating tablet and not susceptible to later modification). If false, also
# send tasks that are uploaded but not yet finalized (they will then be sent
# again if they are modified later).

FINALIZED_ONLY = true

# TASK_FORMAT: one of: pdf, html, xml

TASK_FORMAT = pdf

# XML_FIELD_COMMENTS: if TASK_FORMAT is xml, then XML_FIELD_COMMENTS determines
# whether field comments are included. These describe the meaning of each field
# so add to space requirements but provide more information for human readers.
# (Default true.)

XML_FIELD_COMMENTS = true

# -----------------------------------------------------------------------------
# Options applicable to HL7 only (TYPE = hl7)
# -----------------------------------------------------------------------------

# HOST: HL7 hostname or IP address

HOST = myhl7server.mydomain

# PORT: HL7 port (default 2575)

PORT = 2575

# PING_FIRST: if true, requires a successful ping to the server prior to
# sending HL7 messages. (Note: this is a TCP/IP ping, and tests that the
# machine is up, not that it is running an HL7 server.) Default: true.

PING_FIRST = true

# NETWORK_TIMEOUT_MS: network time (in milliseconds). Default: 10000.

NETWORK_TIMEOUT_MS = 10000

# IDNUM_TYPE_1 ... IDNUM_TYPE_8: strings used as the HL7 identifier type code
# in the PID segment, field 3 (internal ID) list of identifiers. If one is
# blank, its information will not be sent. (If the PRIMARY_IDNUM's type is
# blank, the system will not process messages.)

IDNUM_TYPE_1 = NHS
IDNUM_TYPE_2 = RiO
IDNUM_TYPE_3 = M
IDNUM_TYPE_4 = Add
IDNUM_TYPE_5 = Pap
IDNUM_TYPE_6 = Hinch
IDNUM_TYPE_7 = PCH
IDNUM_TYPE_8 =

# IDNUM_AA_1 ... IDNUM_AA_8: strings used as the Assigning Authority in the PID
# segment, field 3 (internal ID) list of identifiers. Optional.

IDNUM_AA_1 = NHS
IDNUM_AA_2 = CPFT
IDNUM_AA_3 = CPFT
IDNUM_AA_4 = CUH
IDNUM_AA_5 = CUH
IDNUM_AA_6 = HHC
IDNUM_AA_7 = PSH
IDNUM_AA_8 =

# KEEP_MESSAGE: keep a copy of the entire message in the databaase. Default is
# false. WARNING: may consume significant space in the database.

KEEP_MESSAGE = false

# KEEP_REPLY: keep a copy of the reply (e.g. acknowledgement) message received
# from the server. Default is false. WARNING: may consume significant space.

KEEP_REPLY = false

# DIVERT_TO_FILE: Override HOST/PORT options and send HL7 messages to this
# (single) file instead. Each messages is appended to the file. Default is
# blank (meaning network transmission will be used). This is a debugging
# option, allowing you to redirect HL7 messages to a file and inspect them.

DIVERT_TO_FILE =

# TREAT_DIVERTED_AS_SENT: Any messages that are diverted to a file (using
# DIVERT_TO_FILE) are treated as having been sent (thus allowing the file to
# mimic an HL7-receiving server that's accepting messages happily). If set to
# false (the default), a diversion will allow you to preview messages for
# debugging purposes without "swallowing" them. BEWARE, though: if you have
# an automatically scheduled job (for example, to send messages every minute)
# and you divert with this flag set to false, you will end up with a great many
# message attempts!

TREAT_DIVERTED_AS_SENT = false

# -----------------------------------------------------------------------------
# Options applicable to file transfers only (TYPE = file)
# -----------------------------------------------------------------------------

# INCLUDE_ANONYMOUS: include anonymous tasks.
# - Note that anonymous tasks cannot be sent via HL7; the HL7 specification is
#   heavily tied to identification.
# - Note also that this setting operates independently of the
#   REQUIRE_PRIMARY_IDNUM_MANDATORY_IN_POLICY setting.

INCLUDE_ANONYMOUS = true

# PATIENT_SPEC_IF_ANONYMOUS: for anonymous tasks, this string is used as the
# patient descriptor (see also PATIENT_SPEC, FILENAME_SPEC below). Typically
# "anonymous".

PATIENT_SPEC_IF_ANONYMOUS = anonymous

# PATIENT_SPEC: string, into which substitutions will be made, that defines the
# {patient} element available for substitution into the FILENAME_SPEC (see
# below). Possible substitutions: as for PATIENT_SPEC in the main "[server]"
# section of the configuration file (see above).

PATIENT_SPEC = {surname}_{forename}_{idshortdesc1}{idnum1}

# FILENAME_SPEC: string into which substitutions will be made to determine the
# filename to be used for each file. Possible substitutions: as for
# SUGGESTED_PDF_FILENAME in the main "[server]" section of the configuration
# file (see above).

FILENAME_SPEC = /my_nfs_mount/mypath/CamCOPS_{patient}_{created}_{tasktype}-{serverpk}.{filetype}

# MAKE_DIRECTORY: make the directory if it doesn't already exist. Default is
# false.

MAKE_DIRECTORY = true

# OVERWRITE_FILES: whether or not to attempt overwriting existing files of the
# same name (default false). There is a DANGER of inadvertent data loss if you
# set this to true. (Needing to overwrite a file suggests that your filenames
# are not task-unique; try ensuring that both the {tasktype} and {serverpk}
# attributes are used in the filename.)

OVERWRITE_FILES = false

# RIO_METADATA: whether or not to export a metadata file for Servelec's RiO
# (default false).
# Details of this file format are in cc_task.py / Task.get_rio_metadata().
# The metadata filename is that of its associated file, but with the extension
# replaced by ".metadata" (e.g. X.pdf is accompanied by X.metadata).
# If RIO_METADATA is true, the following options also apply:
#   RIO_IDNUM: which of the ID numbers (as above) is the RiO ID?
#   RIO_UPLOADING_USER: username for the uploading user (maximum of 10
#       characters)
#   RIO_DOCUMENT_TYPE: document type as defined in the receiving RiO system.
#       This is a code that maps to a human-readable document type; for
#       example, the code "APT" might map to "Appointment Letter". Typically we
#       might want a code that maps to "Clinical Correspondence", but the code
#       will be defined within the local RiO system configuration.

RIO_METADATA = false
RIO_IDNUM = 2
RIO_UPLOADING_USER = CamCOPS
RIO_DOCUMENT_TYPE = CC

# SCRIPT_AFTER_FILE_EXPORT: filename of a shell script or other executable to
# run after file export is complete. You might use this script, for example, to
# move the files to a different location (such as across a network). If the
# parameter is blank, no script will be run. If no files are exported, the
# script will not be run.
# - Parameters passed to the script: a list of all the filenames exported.
#   (This includes any RiO metadata filenames.)
# - WARNING: the script will execute with the same permissions as the instance
#   of CamCOPS that's doing the export (so, for example, if you run CamCOPS
#   from your /etc/crontab as root, then this script will be run as root; that
#   can pose a risk!).
# - The script executes while the export lock is still held by CamCOPS (i.e.
#   further HL7/file transfers won't be started until the script(s) is/are
#   complete).
# - If the script fails, an error message is recorded, but the file transfer is
#   still considered to have been made (CamCOPS has done all it can and the
#   responsibility now lies elsewhere).
# - Example test script: suppose this is /usr/local/bin/print_arguments:
#       #!/bin/bash
#       for f in \$@
#       do
#           echo "CamCOPS has just exported this file: \$f"
#       done
#   ... then you could set:
#       SCRIPT_AFTER_FILE_EXPORT = /usr/local/bin/print_arguments

SCRIPT_AFTER_FILE_EXPORT =

EOF

cp $WRKCONFIGFILE $WEBDOCSCONFIGFILE

#==============================================================================
echo "Creating launch script. Will be installed as $DSTCONSOLEFILE"
#==============================================================================
cat << EOF > $WRKCONSOLEFILE
#!/bin/sh
# Launch script for CamCOPS command-line tool.

echo 'Launching CamCOPS command-line tool...' >&2

export PYTHONPATH=$DSTPYTHONPATH

#if [ -f $DSTCONFIGFILE ]; then
#    WWWUSER=`stat -c %U $DSTCONFIGFILE`
#    echo "sudo to \$WWWUSER user for access to default configuration file $DSTCONFIGFILE"
#    sudo -u \$WWWUSER PYTHONPATH=$DSTPYTHONPATH $PYTHON $DSTMAINSCRIPT "\$@"
#else
#    echo "Can't find $DSTCONFIGFILE to determine its owner."
#    echo "sudo to $APACHEUSER as default user for reading Apache configuration files"
#    sudo -u $APACHEUSER PYTHONPATH=$DSTPYTHONPATH $PYTHON $DSTMAINSCRIPT "\$@"
#fi

$PYTHON $DSTMAINSCRIPT "\$@"

EOF

#==============================================================================
echo "Creating secondary launch script. Will be installed as $DSTDBHELPERFILE"
#==============================================================================

cat << EOF > $WRKDBHELPERFILE
#!/bin/sh
# Launch script for CamCOPS database script via command line.

echo 'Launching CamCOPS database script via command line (for testing only)...' >&2
export PYTHONPATH=$DSTPYTHONPATH
$PYTHON $DSTDBSCRIPT "\$@"

EOF

##==============================================================================
#echo "Creating wkhtmltopdf.sh launch screen to use standalone X server"
##==============================================================================
#
#cat << EOF > $WRKBASEDIR/wkhtmltopdf.sh
##!/bin/bash
#xvfb-run --auto-servernum --server-args="-screen 0 640x480x16" /usr/bin/wkhtmltopdf "\$@"
#EOF

#==============================================================================
echo "Creating control file"
#==============================================================================
cat << EOF > $DEBDIR/control
Package: $PACKAGE
Version: $DEBVERSION
Section: science
Priority: optional
Architecture: all
Maintainer: Rudolf Cardinal <rudolf@pobox.com>
Depends: $DEPENDS_DEB
Recommends: mysql-workbench
Description: Cambridge Cognitive and Psychiatric Test Kit (CamCOPS), server packages.
 This package contains the files necessary to run a CamCOPS server and receive
 information from the CamCOPS tablet applications (iOS, Android).
 .
 For more details, see http://www.camcops.org/
EOF

#==============================================================================
echo "Creating conffiles file. Will be installed as $DSTDPKGDIR/$PACKAGE.conffiles"
#==============================================================================
cat << EOF > $DEBDIR/conffiles
$DSTCONFIGFILE
EOF

# If a configuration file is removed by the user, it won't be reinstalled: http://www.debian.org/doc/debian-policy/ap-pkg-conffiles.html
# In this situation, do "sudo aptitude purge camcops" then reinstall.

#==============================================================================
echo "Creating postinst file. Will be installed as $DSTDPKGDIR/$PACKAGE.postinst"
#==============================================================================

cat << EOF > $DEBDIR/postinst # quoting the limit string prevents variable interpretation
#!/bin/bash
# Exit on any errors? (Lintian strongly advises this.)
set -e

echo '$PACKAGE: postinst file executing'
EOF

cat << "EOF" >> $DEBDIR/postinst # quoting the limit string prevents variable interpretation

#------------------------------------------------------------------------------
# Helper functions
#------------------------------------------------------------------------------

command_exists()
{
    # arguments: $1 is the command to test
    # returns 0 (true) for found, 1 (false) for not found
    if command -v $1 >/dev/null; then return 0; else return 1; fi
}

running_centos()
{
    if [ -f /etc/system-release ] ; then
        SYSTEM=`cat /etc/system-release | cut -d' ' -f1`
        # VERSION=`cat /etc/system-release | cut -d' ' -f3`
        # SYSTEM_ID=\$SYSTEM-\$VERSION
        if ["$SYSTEM" == "CentOS"] ; then
            return 0 # true
        fi
    fi
    return 1 # false
}
EOF

cat << EOF >> $DEBDIR/postinst # variables will be interpreted in this section

#------------------------------------------------------------------------------
# Install Python virtual environment with packages
#------------------------------------------------------------------------------

# Must NOT use plain pip command, as that may point to the wrong Python
# environment - particularly under CentOS, where Python 2.7 requires manual
# installation.
#
# One should not distribute a "built" virtualenv (says
# http://stackoverflow.com/questions/5535979). But it's hard to guarantee the
# pip version (e.g. you might install Python 2.7 under CentOS but then get the
# wrong virtualenv or pip version).
#
# So:
# - require /usr/bin/python2.7
# - do everything else: http://stackoverflow.com/questions/4324558
# - note that virtualenv brings pip with it

echo 'Downloading and installing virtualenv'

mkdir -p $DSTTEMPDIR
pushd $DSTTEMPDIR
if ! wget $VIRTUALENV_BASE_URL/virtualenv-$VIRTUALENV_VERSION.tar.gz ; then
    echo "Failed to download virtualenv"
    exit 1
fi
tar xzf virtualenv-$VIRTUALENV_VERSION.tar.gz

echo 'Installing Python 2.7 virtual environment'

$DSTSYSTEMPYTHON virtualenv-$VIRTUALENV_VERSION/virtualenv.py $DSTPYTHONENV

echo 'Removing temporary virtualenv download files'

popd
rm -rf $DSTTEMPDIR

echo 'Installing packages within virtual Python environment via pip'

#== Main set
# Tkinter is standard
$PIP install "distribute>=0.7" # without the quotes it will redirect to a file named "=0.7"
$PIP install hl7
$PIP install lockfile
$PIP install lxml
$PIP install m2crypto
$PIP install matplotlib # slow
$PIP install MySQL-python
$PIP install numpy # slow
$PIP install ping
$PIP install py-bcrypt
$PIP install python-dateutil
# $PIP install pyodbc
$PIP install pyPdf --allow-unverified pyPdf
$PIP install pygments
$PIP install pytz
$PIP install scipy # slow
$PIP install Wand # ImageMagick for Python
$PIP install Werkzeug # profiling middleware

if [ "$PDF_ENGINE" = "weasyprint" ]; then
    #=== weasyprint
    # ... don't want old versions of lxml
    $PIP install --upgrade lxml
    $PIP install weasyprint
elif [ "$PDF_ENGINE" = "xhtml2pdf" ]; then
    #=== xhtml2pdf
    # ... For decent PDFs (see cc_shared.py), need to do this:
    $PIP install xhtml2pdf==0.0.4 --allow-unverified pyPdf --allow-unverified pil
    # ... ORDER DEPENDENCY: may NOW need to clear out (rm -rf /tmp/pip-build-root/html5lib; rm -rf /tmp/pip-build-root/reportlab) before proceeding:
    $PIP install html5lib==0.95
    $PIP install reportlab==2.5

    # ... check versions: pip freeze
    # ... another way: $PIP freeze | grep 'reportlab==2.5' || $PIP install -I reportlab==2.5
    # ... if it fails because of old versions: http://stackoverflow.com/questions/14617136/why-is-pip-installing-an-old-version-of-my-package
elif [ "$PDF_ENGINE" = "pdfkit" ]; then

    $PIP install pdfkit
else
    echo "Unknown PDF engine: $PDF_ENGINE"
    exit 1
fi

#------------------------------------------------------------------------------
echo 'Creating lockfile directory'
#------------------------------------------------------------------------------

mkdir -p $DSTLOCKDIR

#------------------------------------------------------------------------------
# Set permissions ($APACHEUSER user will exist for a standard Ubuntu installation of Apache)
#------------------------------------------------------------------------------
if [ -f $DSTCONFIGFILE ]; then
    echo '$PACKAGE: Setting permissions'
    chmod 600 $DSTCONFIGFILE
    if id -u $APACHEUSER >/dev/null 2>&1; then
        # $APACHEUSER user exists
        chown $APACHEUSER:$APACHEUSER $DSTCONFIGFILE
        chown $APACHEUSER:$APACHEUSER $DSTLOCKDIR
    fi
    # ... otherwise: user will have to check ownership
fi

#------------------------------------------------------------------------------
#echo '$PACKAGE: Compiling Python to bytecode, with full optimization'
#------------------------------------------------------------------------------
#find $DSTCAMCOPSDIR -name "*.py" -exec $PYTHON -OO -m compileall {} \;

#------------------------------------------------------------------------------
# If Apache is installed, restart it
#------------------------------------------------------------------------------
if command_exists apachectl; then
    # OK for Ubuntu (link to apache2ctl), CentOS
    echo '$PACKAGE: Restarting Apache (apachectl restart)'
    apachectl restart
fi
EOF

# To check if a Perl library is installed as a one-liner: perl -e 'use MYLIB'
# For Python, use the Python command line and "import MYLIB"

#==============================================================================
echo "Creating prerm file. Will be installed as $DSTDPKGDIR/$PACKAGE.prerm"
#==============================================================================

cat << EOF > $DEBDIR/prerm
#!/bin/sh
set -e
echo '$PACKAGE prerm file executing'
# Must use -f or an error will cause the prerm (and package removal) to fail
# See /var/lib/dpkg/info/MYPACKAGE.prerm for manual removal!
find $DSTCAMCOPSDIR -name '*.pyc' -delete
find $DSTCAMCOPSDIR -name '*.pyo' -delete
EOF

#==============================================================================
echo "Creating Lintian override file"
#==============================================================================

cat << EOF > $DEBOVERRIDEDIR/$PACKAGE
# Not an official new Debian package, so ignore this one.
# If we did want to close a new-package ITP bug: http://www.debian.org/doc/manuals/developers-reference/pkgs.html#upload-bugfix
$PACKAGE binary: new-package-should-close-itp-bug
EOF

#==============================================================================
echo "Creating copyright file. Will be installed as $DSTDOCDIR/copyright"
#==============================================================================
cat << EOF > $WRKDOCDIR/copyright
$PACKAGE

CAMCOPS

    Copyright (C) 2012, 2013 Rudolf Cardinal (rudolf@pobox.com).
    Department of Psychiatry, University of Cambridge.
    Funded by the Wellcome Trust.

    Licensed under the Apache License, Version 2.0 (the 'License');
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an 'AS IS' BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

ADDITIONAL LIBRARY COMPONENTS

    Public domain or copyright (C) their respective authors (for details,
    see attribution in the source code and other license terms packaged with
    the source).

TEXT FOR SPECIFIC ASSESSMENT SCALES

    Public domain or copyright (C) their respective authors; see details in
    $DSTSTRINGFILE.
EOF

#==============================================================================
echo "Creating demonstration Apache section. Will be installed within $DSTCAMCOPSDIR"
#==============================================================================
# CONSIDER: MULTIPLE INSTANCES
# - http://stackoverflow.com/questions/1553165/multiple-django-sites-with-apache-mod-wsgi
# - http://mediacore.com/blog/hosting-multiple-wsgi-applications-with-apache
# - http://stackoverflow.com/questions/9581197/two-django-projects-running-simultaneously-and-mod-wsgi-acting-werid
cat << EOF > $WRKAPACHECONFIG
    # Sections intended for the Apache SSL site configuration file,
    # usually /etc/apache2/sites-available/default-ssl
    # Typically, much of this content is encapsulated within:
    #       <IfModule mod_ssl.c>
    #           <VirtualHost _default_:443>
    #               # ... other web site stuff
    #               # insert CamCOPS/SSL sections here
    #           </VirtualHost>
    #       </IfModule>

    #==========================================================================
    # mod_wsgi basic configuration - must NOT be within a VirtualHost section
    #==========================================================================
    #   - Specify Python environment to be used by mod_wsgi:
    WSGIPythonHome $DSTPYTHONENV

    #==========================================================================
    # CamCOPS
    #==========================================================================
    #--------------------------------------------------------------------------
    # 1. Load web viewer/database script as daemon processes (faster). Define
    #    process group(s):
    #--------------------------------------------------------------------------
    #   - The code is not thread-safe, so this line must always have 'threads=1'.
    #   - Increase the 'processes' number if demand requires.
    WSGIDaemonProcess camcops_wv display-name=%{GROUP} processes=2 threads=1 python-path=$DSTPYTHONPATH
    WSGIDaemonProcess camcops_db display-name=%{GROUP} processes=2 threads=1 python-path=$DSTPYTHONPATH

    #   - For a second concurrent CamCOPS database, add e.g.:
    # WSGIDaemonProcess camcops_wv2 display-name=%{GROUP} processes=2 threads=1 python-path=$DSTPYTHONPATH
    # WSGIDaemonProcess camcops_db2 display-name=%{GROUP} processes=2 threads=1 python-path=$DSTPYTHONPATH

    #--------------------------------------------------------------------------
    # 2. Map incoming URLs to scripts on the local filesystem
    #--------------------------------------------------------------------------
    #   Mount application (and, because the process/application group is named, preload it):
    WSGIScriptAlias /$URLBASE/$WEBVIEWSCRIPT $DSTSERVERDIR/$MAINSCRIPTNAME process-group=camcops_wv application-group=%{GLOBAL}

    #   URL for tablets to use:
    WSGIScriptAlias /$URLBASE/$TABLETSCRIPT $DSTSERVERDIR/$DBSCRIPTNAME process-group=camcops_db application-group=%{GLOBAL}

    #   Referred to by the webview and must be in the same URL directory:
    Alias /$URLBASE/favicon_camcops.png $DSTSERVERDIR/favicon_camcops.png
    Alias /$URLBASE/logo_camcops.png $DSTSERVERDIR/logo_camcops.png

    #   Change this: aim the alias at your own institutional logo.
    Alias /$URLBASE/logo_local.png $DSTSERVERDIR/logo_local.png

    #   - For a second concurrent CamCOPS database, add e.g.:
    # WSGIScriptAlias /${URLBASE}2/$WEBVIEWSCRIPT $DSTSERVERDIR/$MAINSCRIPTNAME process-group=camcops_wv2 application-group=%{GLOBAL}
    # WSGIScriptAlias /${URLBASE}2/$TABLETSCRIPT $DSTSERVERDIR/$DBSCRIPTNAME process-group=camcops_db2 application-group=%{GLOBAL}
    # Alias /${URLBASE}2/favicon_camcops.png $DSTSERVERDIR/favicon_camcops.png
    # Alias /${URLBASE}2/logo_camcops.png $DSTSERVERDIR/logo_camcops.png
    # Alias /${URLBASE}2/logo_local.png $DSTSERVERDIR/logo_local.png

    #--------------------------------------------------------------------------
    # 3. Set environment variables
    #--------------------------------------------------------------------------
    <Location /$URLBASE>
        SetEnv CAMCOPS_CONFIG_FILE $DSTCONFIGFILE
    </Location>

    #   - For a second concurrent CamCOPS database, create/edit a second
    #     configuration file, and point the new instance at it, e.g.:
    # <Location /${URLBASE}2>
    #     SetEnv CAMCOPS_CONFIG_FILE $DSTCONFIGDIR/camcops2.conf
    # </Location>

    #--------------------------------------------------------------------------
    # 4. Grant permissions
    #--------------------------------------------------------------------------
    <Directory $DSTSERVERDIR>
        Order deny,allow
        Deny from all
        <Files "$MAINSCRIPTNAME"> # Script for webview
            Allow from all
        </Files>
        <Files "$DBSCRIPTNAME"> # Script for tablets to upload data
            Allow from all
        </Files>
        <Files "favicon_camcops.png"> # CamCOPS favicon
            Allow from all
        </Files>
        <Files "logo_camcops.png"> # CamCOPS logo
            Allow from all
        </Files>
        <Files "logo_local.png"> # Dummy local institutional logo
            Allow from all
        </Files>
    </Directory>

    #==========================================================================
    # SSL security (for HTTPS)
    #==========================================================================

    # You will also need to install your SSL certificate; see the instructions
    # that came with it. You get a certificate by creating a certificate signing
    # request (CSR). You enter some details about your site, and a software tool
    # makes (1) a private key, which you keep utterly private, and (2) a CSR,
    # which you send to a Certificate Authority (CA) for signing. They send back
    # a signed certificate, and a chain of certificates leading from yours to a
    # trusted root CA.

    # You can create your own (a 'snake-oil' certificate), but your tablets
    # and browsers will not trust it, so this is a bad idea.

    # Once you have your certificate: edit and uncomment these lines:

    # SSLEngine on

    # SSLCertificateKeyFile /etc/ssl/private/my.private.key

        # ... a private file that you made before creating the certificate
        # request, and NEVER GAVE TO ANYBODY, and NEVER WILL (or your
        # security is broken and you need a new certificate).

    # SSLCertificateFile /etc/ssl/certs/my.public.cert

        # ... signed and supplied to you by the certificate authority (CA),
        # from the public certificate you sent to them.

    # SSLCertificateChainFile /etc/ssl/certs/my-institution.ca-bundle

        # ... made from additional certificates in a chain, supplied to you by
        # the CA. For example, mine is univcam.ca-bundle, made with the command:
        #
        # cat TERENASSLCA.crt UTNAddTrustServer_CA.crt AddTrustExternalCARoot.crt > univcam.ca-bundle

    #==========================================================================
    # GZIP COMPRESSION FOR APPROPRIATE CONTENT TYPES (OPTIONAL)
    # Run "sudo a2enmod deflate" from the command line if not already enabled.
    #==========================================================================
    # http://stackoverflow.com/questions/12367858/how-can-i-get-apache-gzip-compression-to-work
    # testing it: curl -I --compress http://mysite.mydomain/index.html
    # http://serverfault.com/questions/81609/how-to-check-if-apache-compression-is-working
    SetOutputFilter DEFLATE
    AddOutputFilterByType DEFLATE text/html text/css text/plain text/xml application/x-javascript application/x-httpd-php
    BrowserMatch ^Mozilla/4 gzip-only-text/html
    BrowserMatch ^Mozilla/4\.0[678] no-gzip
    BrowserMatch \bMSIE !no-gzip !gzip-only-text/html
    BrowserMatch \bMSI[E] !no-gzip !gzip-only-text/html
    SetEnvIfNoCase Request_URI \.(?:gif|jpe?g|png)$ no-gzip
    Header append Vary User-Agent env=!dont-vary

EOF

# In <Files "$DBSCRIPTNAME"> section, we did have:
    # The next line prevents XMLHttpRequest Access-Control-Allow-Origin errors.
    # Also need headers.load as a module: http://harthur.wordpress.com/2009/10/15/configure-apache-to-accept-cross-site-xmlhttprequests-on-ubuntu/
    # ln -s /etc/apache2/mods-available/headers.load /etc/apache2/mods-enabled/headers.load

    # Header set Access-Control-Allow-Origin "*"

#==============================================================================
echo "Creating demonstration MySQL database creation commands. Will be installed within $DSTCAMCOPSDIR"
#==============================================================================
cat << EOF > $WRKMYSQLCREATION
# First, from the Linux command line, log in to MySQL as root:

mysql --host=127.0.0.1 --port=3306 --user=root --password
# ... or the usual short form: mysql -u root -p

# Create the database:

CREATE DATABASE $DEFAULT_DB_NAME;

# Ideally, create another user that only has access to the CamCOPS database.
# You should do this, so that you don’t use the root account unnecessarily.

GRANT ALL PRIVILEGES ON $DEFAULT_DB_NAME.* TO '$DEFAULT_DB_USER'@'localhost' IDENTIFIED BY '$DEFAULT_DB_PASSWORD';

# For future use: if you plan to explore your database directly for analysis,
# you may want to create a read-only user. Though it may not be ideal (check:
# are you happy the user can see the audit trail?), you can create a user with
# read-only access to the entire database like this:

GRANT SELECT $DEFAULT_DB_NAME.* TO '$DEFAULT_DB_READONLY_USER'@'localhost' IDENTIFIED BY '$DEFAULT_DB_READONLY_PASSWORD';

# All done. Quit MySQL:

exit
EOF

#==============================================================================
echo "Creating demonstration backup script. Will be installed within $DSTCAMCOPSDIR"
#==============================================================================
cat << EOF > $WRKDBDUMPFILE
#!/bin/sh

# Minimal simple script to dump all current MySQL databases.
# This file must be READABLE ONLY BY ROOT (or equivalent, backup)! Password in cleartext.
# Once you have copied this file and edited it, perform:
#     sudo chown root:root <filename>
#     sudo chmod 700 <filename>
# Then you can add it to your /etc/crontab for regular execution.

BACKUPDIR='/var/backups/mysql'
BACKUPFILE='all_my_mysql_databases.sql'
USERNAME='root' # MySQL username
PASSWORD='PPPPPP_REPLACE_ME' # MySQL password

# Make directory unless it exists already:
mkdir -p \$BACKUPDIR

# Dump the database:
mysqldump -u \$USERNAME -p\$PASSWORD --all-databases --force > \$BACKUPDIR/\$BACKUPFILE

# Make sure the backups (which may contain sensitive information) are only readable by the 'backup' user group:
cd \$BACKUPDIR
chown -R backup:backup *
chmod -R o-rwx *
chmod -R ug+rw *

EOF

#==============================================================================
echo "Setting ownership and permissions"
#==============================================================================
sudo chown -R $USER:$USER $WRKDIR
find $WRKDIR -type d -exec chmod 755 {} \;
# ... make directories executabe: must do that first, or all the subsequent recursions fail
find $WRKDIR -type f -exec chmod 644 {} \;
chmod a+x \
    $WRKCONSOLEFILE \
    $WRKDBHELPERFILE \
    $WRKMAINSCRIPT \
    $WRKDBDUMPFILE \
    $DEBDIR/prerm $DEBDIR/postinst
# ... $WRKBASEDIR/wkhtmltopdf.sh
find $WRKDIR -iname "*py" -exec chmod a+x {} \;
find $WRKDIR -iname "*pl" -exec chmod a+x {} \;

#==============================================================================
echo "Removing junk"
#==============================================================================
find $WRKDIR -name ".svn" -exec rm -rf {} \; 2>/dev/null
find $WRKDOCDIR -name "LICENSE" -exec rm -f {} \;

#==============================================================================
echo "Building package"
#==============================================================================
fakeroot dpkg-deb --build $WRKDIR
# ... "fakeroot" prefix makes all files installed as root:root

#==============================================================================
echo "Renaming package"
#==============================================================================
mv $INITIALPACKAGENAME $FINALPACKAGENAME

#==============================================================================
echo "Checking with Lintian"
#==============================================================================
lintian $FINALPACKAGENAME

#==============================================================================
echo "Converting to RPM"
#==============================================================================
pushd $PACKAGEDIR
EXPECTED_MAIN_RPM_NAME=${PACKAGE}-${MAINVERSION}-2.noarch.rpm
sudo alien --to-rpm --scripts $FINALPACKAGENAME
# see "man alien" / NOTES: needs to be run as root for correct final permissions
MYUSER=`whoami`
sudo chown $MYUSER:$MYUSER $EXPECTED_MAIN_RPM_NAME
popd

#==============================================================================
echo "Changing dependencies within RPM"
#==============================================================================
# Alien does not successfully translate the dependencies, and anyway the names
# for packages are different on CentOS. A dummy prerequisite package works
# (below) but is inelegant.
# The rpmbuild commands are filters (text in via stdin, text out to stdout),
# so replacement just needs the echo command.

rpmrebuild \
    --define "_topdir $RPMTOPDIR" \
    --package \
    --change-spec-requires="echo Requires: $DEPENDS_RPM" \
    $PACKAGEDIR/$EXPECTED_MAIN_RPM_NAME
# ... add "--edit-whole" as the last option before the RPM name to see what you're getting
# ... define topdir, or it builds in ~/rpmbuild/...
# ... --package, or it looks for an installed RPM rather than a package file

mv $RPMTOPDIR/RPMS/noarch/$EXPECTED_MAIN_RPM_NAME $PACKAGEDIR
# ... will overwrite its predecessor

#==============================================================================
#echo "Creating meta-RPM"
#==============================================================================
# http://www.redhat.com/archives/rpm-list/2006-April/msg00015.html
# http://kmymoney2.sourceforge.net/phb/rpm-example.html
# RPM groups are extremely limited, though more (it seems) in CentOS
# - https://fedoraproject.org/wiki/RPMGroups
# - yum grouplist

# rpm build process
# http://raftaman.net/?p=1229
# ... otherwise rpmbuild will, strangely, make them as root (how??) if they don't exist
# ... http://www.rpm.org/max-rpm/s1-rpm-anywhere-different-build-area.html

#RPMSPECFILE=$RPMTOPDIR/SPECS/$RPM_PREREQUISITE_PACKAGE.spec

#RPM_PREREQUISITE_RELEASE=0
#echo "
#Summary:    Dummy package of CamCOPS prerequisite packages
#Name:	    $RPM_PREREQUISITE_PACKAGE
#Version:	$MAINVERSION
#Release:	$RPM_PREREQUISITE_RELEASE
#License:	Apache 2.0
#Packager:	Rudolf Cardinal <rudolf@pobox.com>
#Vendor:		Rudolf Cardinal <rudolf@pobox.com>
#Group:		Scientific support
#URL:		http://www.camcops.org/
#Requires:	$DEPENDS_RPM
#BuildArch:	noarch
#
#%description
#This is a dummy package. Install it before CamCOPS itself.
#
#%files
#
#%changelog
#* Wed Jan 1 2014 Rudolf Cardinal <rudolf@pobox.com>
#- Created.
#" > $RPMSPECFILE

##pushd $RPMTOPDIR/SPECS
#rpmbuild --define "_topdir $RPMTOPDIR" -bb -v $RPMSPECFILE
##popd
#EXPECTED_PREREQUISITE_RPM_NAME=${RPM_PREREQUISITE_PACKAGE}-${MAINVERSION}-${RPM_PREREQUISITE_RELEASE}.noarch.rpm
#mv $RPMTOPDIR/RPMS/noarch/$EXPECTED_PREREQUISITE_RPM_NAME $PACKAGEDIR

#==============================================================================
echo "========================================================================="
echo "Debian package should be: $FINALPACKAGENAME"
echo "RPM should be: $PACKAGEDIR/$EXPECTED_MAIN_RPM_NAME"
#==============================================================================
