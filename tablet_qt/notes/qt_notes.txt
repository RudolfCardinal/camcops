===============================================================================
Overall design changes 2016
===============================================================================
- Titanium doesn't support Windows binaries well at present (and not at all
  for Windows prior to Win 10). Qt supports all of {Linux, Windows, iOS,
  OS X, Android} and will probably run faster. We're already had speed problems
  at various times with all of: menus, questionnaires, typing.
  CONSIDER: QT FOR TABLETS.

- Code will then be harder for novices to write, but more robust (e.g.
  compiled and type-checked).

- The user interface for web-based editing should be different to that of the
  tablet. The experience with Titanium suggests that running the "tablet" code
  on the web site is dreadful. One could envisage creating a scripting language
  that both the tablet and the web site interpreted (differently). However,
  that'd be pretty tricky and some tasks wouldn't work across platforms (Photo;
  ID/ED; ...).
  So probably best to write separate web editing code (e.g. with Django) for
  questionnaire tasks.

- Could use two databases on the tablet, to simplify the selection process for
  upload (i.e. a 'data' database and a 'system' database).

- Could return BLOBs to the database. Nothing else would change.
  SQLite can handle BLOBs up to 1 GB by default:
  https://www.sqlite.org/limits.html

- Web site to SQLAlchemy and then also Django? Or ??use Django ORM?
  Looks tricky to mix the two.
  http://lethain.com/replacing-django-s-orm-with-sqlalchemy/
  https://www.quora.com/Which-is-better-and-why-Djangos-ORM-or-SQLAlchemy

  BUT will need to think about
    - core fields
    - tablet upload script
    - dual use of dictionaries for XML (etc.) and databases, e.g. summary
      fields

===============================================================================
Licensing
===============================================================================
- Qt Community requires the LGPL.
- The LGPL appears to be compatible with app stores (Apple, Google) AS LONG AS
  the work is:
    - fully open-sourced (if static linking required, which it is for older
      iOS versions) (secret source code is compatible with dynamic linking
      but I don't plan to have any secret source code anyway)
    - Qt source is distributed
        *** need to do this; link to Qt not enough; see https://www.qt.io/faq/
    - full instructions for rebuilding are supplied
  See
    https://www.qt.io/faq/
    http://blog.qt.io/blog/2014/10/01/benefits-of-the-indie-mobile-licensing/
    https://wiki.qt.io/Licensing-talk-about-mobile-platforms
- License should therefore be LGPL v3 (+/- others if dual licensing required).

===============================================================================
UI elements
===============================================================================

- Core choice is QML (with Javascript) versus QWidgets (with C++).
  I'd prefer C++, for speed and compilation checks.
- Also, there's significant work in the C++/QML interface: e.g.
    https://wiki.qt.io/How_to_Use_a_QSqlQueryModel_in_QML

- Android CSS not working properly for list widgets. Fixed as per:
  https://bugreports.qt.io/browse/QTBUG-45517

===============================================================================
String encoding
===============================================================================
- Follow Qt policy: all source is UTF-8.

===============================================================================
Resources
===============================================================================
- For FILENAMES, use :/dirname/filename.ext
- For URLs, use qrc:///dirname/filename.ext
- http://doc.qt.io/qt-5/resources.html

===============================================================================
Short notes on bugs
===============================================================================
- "undefined vtable"? Re-run qmake (from the Build menu).
  This happens when you add something using Q_OBJECT and don't create a new
  source file, I think.
  http://stackoverflow.com/questions/2555816/qt-linker-error-undefined-reference-to-vtable

===============================================================================
Coding conventions
===============================================================================
- ClassName
- functionName, as per Qt
- g_global_variable
- m_member_variable
- any_old_variable
- p_ pointer, m_p_ member pointer (optional in local variables)
- CONSTANT, LONG_CONSTANT
- (avoid Hungarian notation)
- functions:
    - prefer clear verbs, e.g. getX, setX, isX/hasX/doesX
    - but for simple objects, can use e.g. x, setX

===============================================================================
Language and speed
===============================================================================
- Index-based iteration is fastest:
  http://blog.qt.io/blog/2009/01/23/iterating-efficiently/

===============================================================================
Platforms
===============================================================================
Confirmed:

- Works on Linux with predistributed Qt
- Works on Android emulator with predistributed Qt
- Works on Mac OS X native with predistributed Qt
- Works on iOS with predistributed Qt

- Custom-compiled Qt on Android ARM working
- Custom-compiled Qt on Android x86 working (inc. fast emulator)
- Custom-compiled Qt on Linux (x86 64) working

- Custom compilation required for SQLite
- Custom compilation required for SSL

*** SQLITE NOT YET WORKING; NEEDS QT RECOMPILE
- Works on Windows 10 native 64-bit with predistributed Qt (as a .exe)
    Visual Studio 2015 Community
    ... which doesn't install C++ by default!
        http://stackoverflow.com/questions/31953769/visual-studio-doesnt-have-cl-exe
    ... then works (with Qt edition for Visual Studio 2015).
  The "add component" tool doesn't seem to come with Windows, so install ALL
  versions you might need (e.g. including 32-bit versions).
- *** NOT YET DONE: standalone .EXE
    http://wiki.qt.io/Build_Standalone_Qt_Application_for_Windows
    http://stackoverflow.com/questions/12654613/static-linking-qt-with-open-source-version
    https://wiki.qt.io/Licensing-talk-about-mobile-platforms#Legal_advice_on_statically_linking_Qt_and_the_LGPL_license
- *** NOT YET TESTED: Windows XP 32-bit

===============================================================================
JDK
===============================================================================
- "... unable to find a javac compiler... Perhaps JAVA_HOME does not point
  to the JDK"; then in Tools / Options / Android / JDK location, "... does not
  seem to be a JDK folder" (under Ubuntu 16.04):
    sudo apt-get install openjdk-8-jdk
  Then the JDK directory is /usr/lib/jvm/java-8-openjdk-amd64

===============================================================================
Compiling, linking
===============================================================================
- See my build_qt.py
- To compile projects in parallel, see
    http://stackoverflow.com/questions/9420825/how-to-compile-on-multiple-cores-using-mingw-inside-qtcreator
- "E/AndroidRuntime( 7355): java.lang.UnsatisfiedLinkError: Couldn't load CamCOPS: findLibrary returned null"
  ... was an error in autogenerated AndroidManifest.xml:
  WRONG: <meta-data android:name="android.app.lib_name" android:value="CamCOPS"/>
  RIGHT: <meta-data android:name="android.app.lib_name" android:value="camcops_tablet"/>
- Use multiple cores: add "-j 8" to the "make" part of the project Build Steps
  http://doc.qt.io/qtcreator/creator-faq.html
- /usr/bin/ld: cannot find -lGL
  must do: sudo apt-get install libgl1-mesa-dev

===============================================================================
Core dump
===============================================================================
- http://stackoverflow.com/questions/2065912/core-dumped-but-core-file-is-not-in-current-directory
  ulimit -c unlimited

===============================================================================
Menu structure, class factories, ...
===============================================================================

- no harm in encoding menus fairly manually
- TaskFactory works fine
- *** main thing to consider then is the Questionnaire implementation
    - a questionnaire has
        simple properties
        a list of pages
            a page has a list of elements
            ...
        can pass in callbacks

    - can't (realistically) use named parameters:
        https://www.reddit.com/r/programming/comments/19bul0/c11_named_parameters_using_operator_suffixes_and/
    - so use this idiom:
        - use setters that return *this
          https://en.wikibooks.org/wiki/More_C%2B%2B_Idioms/Named_Parameter
    - for list construction, C++11 saves us:
        http://stackoverflow.com/questions/18998488/what-is-the-right-way-to-initialize-a-qlist
        http://stackoverflow.com/questions/16948382/how-to-enable-c11-in-qt-creator

    - so: nice way to specify a list?
        e.g.
            elements = {
                QuestionText("my text").setBold(true),
                QuestionMCQ(
                    "q10",
                    {
                        KeyValuePair("blah0", 0),
                        KeyValuePair("blah1", 1)
                    }
                )
            }
    - so we have setters that return *this
      https://en.wikibooks.org/wiki/More_C%2B%2B_Idioms/Named_Parameter

- *** and field member variables

    - QDjango?
        note also http://doc.qt.io/qt-4.8/qmetaobject.html#details
        ... no
    - a custom DatabaseObject class with fieldname/variant mappings?
        ... no
    - QSqlField / QSqlRecord?
        ... yes?
    - ODB? http://www.codesynthesis.com/products/odb/doc/manual.xhtml
    - https://en.wikipedia.org/wiki/List_of_object-relational_mapping_software#C.2B.2B
    - Seems natural to subclass QSqlField, but then we couldn't use it
      in non-pointer ways e.g. for QSqlRecord
      ... so we should implement our own.

- HTTPS

- *** webviews
    http://stackoverflow.com/questions/19282255/qwebview-on-qt4-and-qt5
    http://doc.qt.io/qt-5/qtwebenginewidgets-qtwebkitportingguide.html
    http://doc.qt.io/qt-4.8/qtwebkit-bridge.html -- old?
    https://www.kdab.com/qt-webchannel-bridging-gap-cqml-web/
    http://doc.qt.io/qt-5.6/qwebchannel.html
    http://doc.qt.io/qt-5.6/qtwebchannel-standalone-example.html
    http://doc.qt.io/qt-5.6/qtwebchannel-javascript.html
    http://stackoverflow.com/questions/9615194/is-it-possible-to-call-a-c-function-from-javascript-in-a-qwebview


===============================================================================
Database objects
===============================================================================

- Since C++ static methods cannot be virtual, the approaches possible to
  override field lists are:
  - curiously recurring template pattern, e.g.
    http://stackoverflow.com/questions/2721846
  - plain virtual functions, and instantiate a class to get field list for
    table creation (etc).
  Since a reasonable proportion of "day-to-day" work with fields involves
  knowing fieldspec information (e.g. field types), perfectly reasonable
  to use the latter (which also makes for clearer code).
- Create a derived class for each type of database object, with addField()
  calls in the constructor.

- Previous notes on this:

// To make makeTables() static, we need something like:
// - a static member object detailing the fields, via that static member's
//   constructor - e.g. a TableSpec class:
//      static MyTableSpec m_tablespec;
//      ...
//      MyTableSpec::MyTableSpec()
//      {
//          addField("thing", QVariant::Int);
//          ...
//      }
// - a normal member object containing field values for those fields, e.g.
//      MyFieldValues m_fields;
//      ...
//      MyTask::MyTask() :
//          m_fields(m_tablespec)
//      {
//      }
// - however, I don't see how the static constructor for the fieldspec is going
//   to be able to read other static properties like hasClinician().
//   Others agree:
//      http://stackoverflow.com/questions/1197106/static-constructors-in-c-need-to-initialize-private-static-objects
// - Then beware static init order:
//   https://isocpp.org/wiki/faq/ctors#static-init-order
// - Moreover, functions cannot be both static and virtual.
//   http://stackoverflow.com/questions/1820477/c-static-virtual-members
//   So you can't do, e.g. "virtual static bool anonymous() const { return false; }"
//   and override that in derived classes.
//   All sorts of nasty template hacks follow...
// - So we're probably better off with the idiom that isolated class instances
//   perform "static" functions.
// - http://cplusplus.bordoon.com/static_initialization.html
//   "... the basic rule that class object constructors and static variable
//   initializer expressions should not refer to class static methods or
//   external variables."


===============================================================================
TO DO
===============================================================================
- SQL framework, inc. translation to textual format for DateTime values
- For SQL bulk reads (uploading), see
    http://stackoverflow.com/questions/18829018/qt-sql-get-column-type-and-name-from-table-without-record
- Factory for registering things that must create tables
    ... of which tasks are just one (but task registration should do this automatically)
    ... once database is opened, call each one
- HTTPS POST
    http://stackoverflow.com/questions/2599423/how-can-i-post-data-to-a-url-using-qnetworkaccessmanager
- Server-side generation of device ID
  (as it's not feasible to generate a proper user- and machine-specific ID
  across all OSs).

http://www.qtcentre.org/threads/62787-Accessing-android-camera

... TEST ANDROID CAMERA

http://doc.qt.io/qt-5/platform-notes-android.html

... ARE POPUPS ALWAYS FULL-SCREEN?

BUTTON IMAGES for hover/touched:

- border image method:
    http://stackoverflow.com/questions/18388098/qt-pushbutton-hover-pressed-icons
    http://stackoverflow.com/questions/20207224/styling-a-qpushbutton-with-two-images - ... ALSO CHECK DOUBLE COLON USED FOR SPECIFIERS (re Android apparent ListView failure) unless that's a typo - pressed image method:
   http://stackoverflow.com/questions/12391125/qpushbutton-css-pressed

LISTVIEW STYLESHEETS:
- may be relevant:
   http://www.qtcentre.org/threads/35930-QListView-stylesheet-problem

- [QTBUG-31230] QSslSocket::setProtocol() does not work for TLS v1.2 - Qt Bug Tracker
  https://bugreports.qt.io/browse/QTBUG-31230

- Redirect qDebug, qWarning, qCritical etc.
  http://stackoverflow.com/questions/4954140/how-to-redirect-qdebug-qwarning-qcritical-etc-output
