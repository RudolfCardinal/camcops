
===============================================================================
TO DO NOW
===============================================================================

- fix server, quick'n'dirty


- TEST .APK (including threaded database writes)
- UPLOAD .APK TO GOOGLE PLAY

- THEN get on with
    (a) server -> SQLAlchemy + Pyramid
    (b) CISR implementation

===============================================================================
REQUIRED, BUT NOT IMMEDIATELY, OR TO THINK ABOUT
===============================================================================

ANDROID
- camera is slow
- no camera preview

SERVER
- cross-platform, Pyramid/SQLAlchemy/Mako

TASKS
- CIS-R, using the new DynamicQuestionnaire class

BUILDS/DISTRIBUTION
- Windows build
- OS/X build
- Google Play Store
- Apple App Store

- *** chains (see e.g. ResearchMenu.js; MenuTableRow.js; QuestionnaireHeader.js...)
    ... or is that pointless relative to a "set of tasks" concept?
- *** concept of "set of tasks" as well as "chain of tasks"

- *** "single patient" mode, cf. "researcher" mode? Tied to a specific
  server?

- *** some sort of "group" concept, e.g. "affective disorder research database"
  plus "clinical" (or sometimes "all"), ?cf. Unix.


- as per Julia's problem: >1 patient on tablet, need to have same RID (because
  extra one created by mistake) - option to merge
  ... NB the tablet will restrict this at present (no patients with same ID)

- Note for SERVER side: is ZIP generation inefficient with >1 SQL query per
  task fetched (e.g. generate PKs, filter PKs, fetch...)
  ... ensure that in general this is done by generate PKs -> yield Task -> filter


===============================================================================
QT BUG?
===============================================================================

- Sometimes there is a delay after clicking on a QuBoolean with an image, like
  the picture-naming in the ACE-III. The delay occurs whether you click the
  boolean indicator (with its "you are touching me" shading) or the image.
  It seems to occur only if the main window is NOT maximized.
  The delay is in calling AspectRatioPixmap::mousePressEvent, for example.
  Using "#define DEBUG_CLICK_TIMING" shows that the delay is NOT because the
  widget's overridden sizeHint (etc.) code is being called.
  Not sure that this is a problem in my code.

===============================================================================
MAYBE IN THE FUTURE
===============================================================================

- extra strings: ?add field for ISO-639-1 two-letter language code (e.g. "en"
  English)
    ... though different servers can distribute whichever language they want;
        this is only relevant for "simultaneously multilingual" environments
    ... defer for now

- VerticalScrollArea: *Nearly* perfect. Unclear if residual minor error relates
  to VerticalScrollArea itself, or to misreporting of ideal height by e.g.
  GridLayoutHfw.
  (Example: PDSS [with no task strings]?)
  (Note: sometimes worth trying to un-maximize then maximize the window; error
  can sometimes go away.)
  2017-07-09: I think this is fixed now.
